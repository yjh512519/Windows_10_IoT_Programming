using System;
using System.Diagnostics;
using System.Threading.Tasks;
using Windows.System.Threading;
using Windows.UI.Core;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;

namespace ThreadingSample
{
    public sealed partial class MainPage : Page
    {
        private Random randomNumberGenerator = new Random();
        private const int msDelay = 200;

        private const string debugInfoPrefix = "Random value";
        private const string numberFormat = "F2";
        private const string timeFormat = "HH:mm:fff";

        public MainPage()
        {
            InitializeComponent();
        }

        private void GetReading()
        {
            Task.Delay(msDelay).Wait();
            var randomValue = randomNumberGenerator.NextDouble();

            string debugString = string.Format("{0} | {1} : {2}",
                DateTime.Now.ToString(timeFormat),
                debugInfoPrefix,
                randomValue.ToString(numberFormat));

            Debug.WriteLine(debugString);
        }

        private void TaskButton_Click(object sender, RoutedEventArgs e)
        {
            var action = new Action(GetReading);
            Task.Run(action);

            // 또는 다른 방법으로
            // Task task = new Task(action);
            // task.Start();
        }

        private async void ThreadPoolButton_Click(object sender, RoutedEventArgs e)
        {
            var workItemHandler = new WorkItemHandler((arg) => { GetReading(); });

            await ThreadPool.RunAsync(workItemHandler);
        }
  
        private void TimerButton_Click(object sender, RoutedEventArgs e)
        {
           
        }
        private void ThreadPoolTimerButton_Click(object sender, RoutedEventArgs e)
        {
        
        }
    }
}
